{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/personal/cardboard-react/src/Components/Auth/Signin.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Spinner } from 'reactstrap';\nimport { get } from 'lodash/fp';\nimport { AuthForm, SubmitButton } from './AuthStyle';\nimport { VALID_EMAIL_REGEX, ACCESS_TOKEN, USER, REACT_APP_API_URL } from '../Constant';\nimport { MAXIMUM_EMAIL_LENGTH } from '../ValidationLength';\n\nconst Signin = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [cookies, setCookie] = useCookies([ACCESS_TOKEN]);\n  const token = cookies[ACCESS_TOKEN];\n  const [register, setRegister] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = register;\n  useEffect(() => {\n    const errors = {\n      email: ''\n    };\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n\n    setFormErrors(errors);\n  }, [email, register]);\n\n  const onInputChange = evt => {\n    setRegister({ ...register,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const confirm = response => {\n    const {\n      access_token,\n      user\n    } = response;\n    setLoading(false);\n\n    if (access_token) {\n      setCookie(USER, user);\n      setCookie(ACCESS_TOKEN, access_token);\n    } else {\n      console.log(response.message);\n    }\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    setLoading(true);\n    fetch(`${REACT_APP_API_URL}/api/v1/auth/login`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      \"body\": JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(response => response.json()).then(response => {\n      confirm(response);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    });\n  };\n\n  if (token) {\n    window.location.href = '/orders';\n  }\n\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Email address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    required: true,\n    value: email,\n    onChange: onInputChange,\n    error: get('email', formErrors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    id: \"pwd\",\n    required: true,\n    value: password,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 42\n    }\n  }), \" Remember me\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Submit\", loading && /*#__PURE__*/React.createElement(Spinner, {\n    size: \"sm\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/irfan/personal/cardboard-react/src/Components/Auth/Signin.js"],"names":["React","useState","useEffect","useCookies","Spinner","get","AuthForm","SubmitButton","VALID_EMAIL_REGEX","ACCESS_TOKEN","USER","REACT_APP_API_URL","MAXIMUM_EMAIL_LENGTH","Signin","formErrors","setFormErrors","loading","setLoading","cookies","setCookie","token","register","setRegister","email","password","errors","test","length","onInputChange","evt","target","name","value","confirm","response","access_token","user","console","log","message","onFormSubmit","preventDefault","fetch","JSON","stringify","then","json","catch","err","window","location","href"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Spinner } from 'reactstrap';\nimport { get } from 'lodash/fp';\nimport { AuthForm, SubmitButton } from './AuthStyle';\nimport { VALID_EMAIL_REGEX, ACCESS_TOKEN, USER, REACT_APP_API_URL } from '../Constant';\nimport { MAXIMUM_EMAIL_LENGTH } from '../ValidationLength';\n\n\nconst Signin = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [cookies, setCookie] = useCookies([ACCESS_TOKEN]);\n  const token = cookies[ACCESS_TOKEN];\n  const [register, setRegister] = useState({\n    email: '',\n    password: '',\n  });\n  const {\n    email,\n    password,\n  } = register;\n\n  useEffect(() => {\n    const errors = {\n      email: '',\n    };\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n    setFormErrors(errors);\n  }, [email, register]);\n\n  const onInputChange = (evt) => {\n    setRegister({\n      ...register,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const confirm = (response) => {\n    const { access_token, user } = response;\n    setLoading(false);\n    if (access_token) {\n      setCookie(USER, user);\n      setCookie(ACCESS_TOKEN, access_token);\n    } else {\n      console.log(response.message)\n    }\n  }\n\n  const onFormSubmit = (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    fetch(`${REACT_APP_API_URL}/api/v1/auth/login`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      \"body\": JSON.stringify({\n        email: email,\n        password: password,\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      confirm(response);\n    })\n    .catch(err => {\n      debugger\n      console.log(err);\n    });\n  };\n\n  if (token) {\n    window.location.href = '/orders';\n  }\n\n\n  return (\n    <AuthForm>\n      <form\n        onSubmit={onFormSubmit}\n        method=\"post\"\n      >\n        <div className=\"form-group\">\n            <label className=\"input-label\" for=\"email\">Email address:</label>\n            <input \n              type=\"email\" \n              name=\"email\"\n              className=\"form-control\" \n              id=\"email\" \n              required\n              value={email}\n              onChange={onInputChange}\n              error={get('email', formErrors)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"input-label\" for=\"pwd\">Password:</label>\n            <input \n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\" \n              id=\"pwd\"\n              required\n              value={password}\n              onChange={onInputChange}\n            />\n          </div>\n        <div className=\"checkbox\">\n          <label className=\"input-label\"><input type=\"checkbox\" /> Remember me</label>\n        </div>\n        <br></br>\n        <SubmitButton className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-default\">\n            Submit\n            {loading && (\n              <Spinner size=\"sm\" color=\"primary\" />\n            )}\n          </button>\n        </SubmitButton>\n      </form>\n    </AuthForm>\n  );\n};\n\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}