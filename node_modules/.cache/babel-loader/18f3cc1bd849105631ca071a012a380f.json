{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/personal/cardboard-react/src/Components/Auth/Signup.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { getOr, get } from 'lodash/fp';\nimport { AuthForm, SubmitButton } from './AuthStyle';\nimport { VALID_EMAIL_REGEX, VALID_NAME_REGEX } from '../Constant';\nimport { MINIMUM_NAME_LENGTH, MAXIMUM_NAME_LENGTH, MAXIMUM_EMAIL_LENGTH } from '../ValidationLength';\n\nconst Signup = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = register;\n  useEffect(() => {\n    const errors = {\n      name: '',\n      email: ''\n    };\n\n    if (!name) {\n      errors.firstName = '';\n    } else if (!(name.length >= MINIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(name.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(name)) {\n      errors.firstName = 'First Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n\n    console.log(register);\n    setFormErrors(errors);\n  }, [name, email]);\n\n  const onInputChange = evt => {\n    setRegister({ ...register,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    console.log(\"Hello\");\n  };\n\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    name: \"name\",\n    className: \"form-control\",\n    id: \"name\",\n    value: name,\n    onChange: onInputChange,\n    error: get('name', formErrors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Email address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    value: email,\n    onChange: onInputChange,\n    error: get('email', formErrors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    id: \"pwd\",\n    value: password,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 42\n    }\n  }), \" Remember me\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/irfan/personal/cardboard-react/src/Components/Auth/Signup.js"],"names":["React","useState","useEffect","getOr","get","AuthForm","SubmitButton","VALID_EMAIL_REGEX","VALID_NAME_REGEX","MINIMUM_NAME_LENGTH","MAXIMUM_NAME_LENGTH","MAXIMUM_EMAIL_LENGTH","Signup","formErrors","setFormErrors","register","setRegister","name","email","password","errors","firstName","length","test","console","log","onInputChange","evt","target","value","onFormSubmit","preventDefault"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { getOr, get } from 'lodash/fp';\nimport { AuthForm, SubmitButton } from './AuthStyle'\nimport { VALID_EMAIL_REGEX, VALID_NAME_REGEX } from '../Constant';\nimport { MINIMUM_NAME_LENGTH, MAXIMUM_NAME_LENGTH, MAXIMUM_EMAIL_LENGTH } from '../ValidationLength';\n\n\nconst Signup = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const {\n    name,\n    email,\n    password,\n  } = register;\n\n  useEffect(() => {\n    const errors = {\n      name: '',\n      email: '',\n    };\n    if (!name) {\n      errors.firstName = '';\n    } else if (!(name.length >= MINIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(name.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(name)) {\n      errors.firstName = 'First Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n    console.log(register)\n    setFormErrors(errors);\n  }, [name, email]);\n\n  const onInputChange = (evt) => {\n    setRegister({\n      ...register,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const onFormSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(\"Hello\")\n  };\n\n  return (\n    <AuthForm>\n      <form\n        onSubmit={onFormSubmit}\n        method=\"post\"\n      >\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Name:</label>\n          <input \n            type=\"name\"\n            name=\"name\"\n            className=\"form-control\" \n            id=\"name\"\n            value={name}\n            onChange={onInputChange}\n            error={get('name', formErrors)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Email address:</label>\n          <input \n            type=\"email\" \n            name=\"email\"\n            className=\"form-control\" \n            id=\"email\" \n            value={email}\n            onChange={onInputChange}\n            error={get('email', formErrors)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"pwd\">Password:</label>\n          <input \n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\" \n            id=\"pwd\"\n            value={password}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"checkbox\">\n          <label className=\"input-label\"><input type=\"checkbox\" /> Remember me</label>\n        </div>\n        <br></br>\n        <SubmitButton className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-default\">Submit</button>\n        </SubmitButton>\n      </form>\n    </AuthForm>\n  );\n};\n\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}