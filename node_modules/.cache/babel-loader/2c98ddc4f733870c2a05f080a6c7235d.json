{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/personal/cardboard-react/src/Components/Pages/NewOrder.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { ACCESS_TOKEN } from '../Constant';\nimport { CustomInput, NewOrderCell, SubTotal, OrderPlace } from './OrderStyle';\nconst HIGH_QUALITY = 20;\nconst PREMIUM = 30;\n\nconst NewOrder = () => {\n  const [cookies] = useCookies([ACCESS_TOKEN]);\n  const token = cookies[ACCESS_TOKEN];\n  const [cardBoards, setCardBoards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState('');\n  const [quantityPremium, setQuantityPremium] = useState(0);\n  const [quantityHigh, setQuantityHigh] = useState(0);\n  const [highTotalPrice, setHighTotalPrice] = useState(0);\n  const [premiumTotalPrice, setPremiumTotalPrice] = useState(0);\n  useEffect(() => {\n    setPremiumTotalPrice(quantityPremium * PREMIUM);\n  }, [quantityPremium]);\n  useEffect(() => {\n    setHighTotalPrice(quantityHigh * HIGH_QUALITY);\n  }, [quantityHigh]);\n\n  const confirm = response => {\n    const {\n      cardboard_type\n    } = response;\n    console.log(cardboard_type);\n    setCardBoards(cardboard_type);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/v1/cardboard_types\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"Authorization\": \"token \" + token\n      }\n    }).then(response => response.json()).then(response => {\n      confirm(response);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    });\n  }, [token]);\n\n  const handleChange = value => {\n    debugger;\n  };\n\n  const onInputChangeHigh = evt => {\n    setQuantityHigh(parseInt(evt.target.value, 10));\n  };\n\n  const onInputChangePremium = evt => {\n    setQuantityPremium(parseInt(evt.target.value, 10));\n  };\n\n  const handleSelectOption = evt => {\n    debugger;\n    setSelectedCard(evt.target.value);\n  };\n\n  const totalQuantity = () => {\n    return quantityHigh + quantityPremium;\n  };\n\n  const totalPrice = () => {\n    return highTotalPrice + premiumTotalPrice;\n  };\n\n  const getCardTypes = () => {\n    let emptyCard = '';\n\n    if (quantityHigh > 0) {\n      emptyCard = emptyCard + 'High Quality';\n    }\n\n    if (quantityPremium > 0) {\n      emptyCard = emptyCard + ', Premium';\n    }\n\n    return emptyCard;\n  };\n\n  const availableBalance = () => {\n    let newBalance = 0;\n\n    if (totalQuantity() <= 10 && totalQuantity() > 0) {\n      newBalance = totalPrice() + 30;\n    }\n\n    if (totalQuantity() <= 20 && totalQuantity() > 10) {\n      newBalance = totalPrice();\n    }\n\n    if (totalQuantity() > 20) {\n      newBalance = totalPrice() * 0.9;\n    }\n\n    return newBalance;\n  };\n\n  const handlePlaceOrder = () => {\n    const params = {\n      quantity: totalQuantity(),\n      price: totalPrice(),\n      user_id: 1,\n      shipping_fee: totalQuantity() < 10 ? 30 : 0,\n      discount: totalPrice() - availableBalance(),\n      card_type: getCardTypes(),\n      total_price: availableBalance()\n    };\n    console.log(params);\n    fetch(\"http://localhost:3000/api/v1/orders\", {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"Authorization\": \"token \" + token\n      },\n      \"body\": JSON.stringify(params)\n    }).then(response => response.json()).then(response => {\n      const {\n        status\n      } = response;\n\n      if (status === 200) {\n        window.location.href = '/orders';\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  if (!token) {\n    window.location.href = '/login';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewOrderCell, {\n    className: \"d-flex flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"CardBoard #\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Card Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"Total\")), cardBoards.map((card, index) => /*#__PURE__*/React.createElement(NewOrderCell, {\n    className: \"d-flex flex-row\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, card.card_type), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, card.price, \" AUD\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    className: \"order_column head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    min: \"0\",\n    type: \"number\",\n    value: index === 0 ? quantityHigh : quantityPremium,\n    name: \"quantity\",\n    onChange: index === 0 ? onInputChangeHigh : onInputChangePremium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order_column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, index === 0 ? highTotalPrice : premiumTotalPrice, \" AUD\"))), /*#__PURE__*/React.createElement(SubTotal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-row justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Sub Total: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \" \", totalPrice(), \" AUD \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-row justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Shipping Fee: \"), totalQuantity() < 10 && totalQuantity() > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \" 30 AUD \") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \" 0 AUD \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-row justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Discount: \"), totalQuantity() > 20 ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \" 0.9 AUD \") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \" 0 AUD \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-row justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"span-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Total Amount: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \" \", availableBalance(), \" AUD \"))), /*#__PURE__*/React.createElement(OrderPlace, {\n    className: \"d-flex flex-row justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handlePlaceOrder,\n    disabled: totalQuantity() === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Place Order\")));\n};\n\nexport default NewOrder;","map":{"version":3,"sources":["/Users/irfan/personal/cardboard-react/src/Components/Pages/NewOrder.js"],"names":["React","useState","useEffect","useCookies","ACCESS_TOKEN","CustomInput","NewOrderCell","SubTotal","OrderPlace","HIGH_QUALITY","PREMIUM","NewOrder","cookies","token","cardBoards","setCardBoards","selectedCard","setSelectedCard","quantityPremium","setQuantityPremium","quantityHigh","setQuantityHigh","highTotalPrice","setHighTotalPrice","premiumTotalPrice","setPremiumTotalPrice","confirm","response","cardboard_type","console","log","fetch","then","json","catch","err","handleChange","value","onInputChangeHigh","evt","parseInt","target","onInputChangePremium","handleSelectOption","totalQuantity","totalPrice","getCardTypes","emptyCard","availableBalance","newBalance","handlePlaceOrder","params","quantity","price","user_id","shipping_fee","discount","card_type","total_price","JSON","stringify","status","window","location","href","map","card","index"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { ACCESS_TOKEN } from '../Constant';\nimport { CustomInput, NewOrderCell, SubTotal, OrderPlace } from './OrderStyle';\n\nconst HIGH_QUALITY = 20;\nconst PREMIUM      = 30;\n\n\nconst NewOrder = () => {\n  const [cookies] = useCookies([ACCESS_TOKEN]);\n  const token = cookies[ACCESS_TOKEN];\n  const [cardBoards, setCardBoards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState('');\n  const [quantityPremium, setQuantityPremium] = useState(0);\n  const [quantityHigh, setQuantityHigh] = useState(0);\n  const [highTotalPrice, setHighTotalPrice] = useState(0);\n  const [premiumTotalPrice, setPremiumTotalPrice] = useState(0);\n\n  useEffect(() => {\n    setPremiumTotalPrice(quantityPremium * PREMIUM);\n  }, [quantityPremium])\n\n  useEffect(() => {\n    setHighTotalPrice(quantityHigh * HIGH_QUALITY)\n  }, [quantityHigh])\n\n\n  const confirm = (response) => {\n    const { cardboard_type } = response;\n    console.log(cardboard_type);\n    setCardBoards(cardboard_type)\n  }\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/v1/cardboard_types\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"Authorization\": \"token \"+token\n      },\n    })\n    .then(response => response.json())\n    .then(response => {\n      confirm(response);\n    })\n    .catch(err => {\n      debugger\n      console.log(err);\n    });\n  }, [token]);\n\n  const handleChange = (value) => {\n    debugger\n  }\n\n  const onInputChangeHigh= (evt) => {\n    setQuantityHigh(parseInt(evt.target.value, 10));\n  }\n\n  const onInputChangePremium= (evt) => {\n    setQuantityPremium(parseInt(evt.target.value, 10));\n  }\n\n  const handleSelectOption = (evt) => {\n    debugger\n    setSelectedCard(evt.target.value)\n  }\n\n  const totalQuantity = ()  => {\n    return quantityHigh + quantityPremium;\n  }\n\n  const totalPrice = ()  => {\n    return highTotalPrice + premiumTotalPrice;\n  }\n\n  const getCardTypes = () => {\n    let emptyCard = '';\n    if (quantityHigh > 0) {\n      emptyCard = emptyCard + 'High Quality'\n    }\n    if (quantityPremium > 0) {\n      emptyCard = emptyCard + ', Premium'\n    } \n    return emptyCard;\n  }\n\n  const availableBalance = () => {\n    let newBalance = 0;\n    if (totalQuantity() <= 10 && totalQuantity() > 0) {\n      newBalance = totalPrice() + 30;\n    }\n    if (totalQuantity() <= 20 && totalQuantity() > 10) {\n      newBalance = totalPrice();\n    }\n    if (totalQuantity() > 20) {\n      newBalance = totalPrice() * 0.9;\n    }\n    return newBalance;\n  }\n\n  const handlePlaceOrder = () => {\n    const params = {\n      quantity: totalQuantity(),\n      price: totalPrice(),\n      user_id: 1,\n      shipping_fee: totalQuantity() < 10 ? 30 : 0,\n      discount: totalPrice() - availableBalance(),\n      card_type: getCardTypes(),\n      total_price: availableBalance(),\n    }\n    console.log(params);\n    fetch(\"http://localhost:3000/api/v1/orders\", {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"Authorization\": \"token \"+token\n      },\n      \"body\": JSON.stringify(params)\n    })\n    .then(response => response.json())\n    .then(response => {\n      const { status } = response\n      if (status === 200) {\n        window.location.href = '/orders';\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  if (!token) {\n    window.location.href = '/login';\n  }\n\n\n  return (\n    <div>\n      <NewOrderCell className=\"d-flex flex-row\">\n        <div className=\"order_column head\">CardBoard #</div>\n        <div className=\"order_column head\">Card Type</div>\n        <div className=\"order_column head\">Price</div>\n        <div className=\"order_column head\">Qty</div>\n        <div className=\"order_column head\">Total</div>\n      </NewOrderCell>\n      {cardBoards.map((card, index) => (\n        <NewOrderCell className=\"d-flex flex-row\" key={index}>\n          <div className=\"order_column\">{index + 1}</div>\n          <div className=\"order_column\">{card.card_type}</div>\n          <div className=\"order_column\">{card.price} AUD</div>\n          <div className=\"order_column\">\n            <CustomInput className=\"order_column head\">\n              <input \n                min=\"0\"\n                type=\"number\" \n                value={index === 0 ? quantityHigh : quantityPremium} \n                name=\"quantity\"\n                onChange={index === 0 ? onInputChangeHigh : onInputChangePremium}\n              />\n            </CustomInput>\n          </div>\n          <div className=\"order_column\">\n            {index === 0 ? highTotalPrice : premiumTotalPrice} AUD\n          </div>\n        </NewOrderCell>\n      ))}\n      <SubTotal>\n        <div className=\"d-flex flex-row justify-content-end\">\n          <span className=\"span-label\">Sub Total: </span>\n          <span> {totalPrice()} AUD </span>\n        </div>\n        <div className=\"d-flex flex-row justify-content-end\">\n          <span className=\"span-label\">Shipping Fee: </span>\n          { totalQuantity() < 10 && totalQuantity() > 0 ?\n            <span> 30 AUD </span> : \n            <span> 0 AUD </span>\n          }\n        </div>\n        <div className=\"d-flex flex-row justify-content-end\">\n          <span className=\"span-label\">Discount: </span>\n          { totalQuantity() > 20 ?\n            <span> 0.9 AUD </span> : \n            <span> 0 AUD </span>\n          }\n        </div>\n        <div className=\"d-flex flex-row justify-content-end\">\n          <span className=\"span-label\">Total Amount: </span>\n          <span> {availableBalance()} AUD </span>\n        </div>\n      </SubTotal>\n      <OrderPlace className=\"d-flex flex-row justify-content-end\">\n        <button \n          type=\"button\"\n          onClick={handlePlaceOrder}\n          disabled={totalQuantity() === 0}\n        >\n          Place Order\n        </button>\n      </OrderPlace>\n    </div>\n  );\n};\n\n\nexport default NewOrder;\n"]},"metadata":{},"sourceType":"module"}