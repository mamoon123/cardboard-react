{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/personal/cardboard-react/src/Components/Auth/Signin.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { AuthForm, SubmitButton } from './AuthStyle';\n\nconst Signin = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = register;\n  useEffect(() => {\n    const errors = {\n      name: '',\n      email: ''\n    };\n\n    if (!name) {\n      errors.name = '';\n    } else if (!(name.length >= MINIMUM_NAME_LENGTH)) {\n      errors.name = `Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(name.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.name = `Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(name)) {\n      errors.name = 'Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n\n    console.log(register);\n    console.log(errors);\n    setFormErrors(errors);\n  }, [name, email]);\n\n  const onInputChange = evt => {\n    setRegister({ ...register,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    console.log(\"Hello\");\n  };\n\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"/action_page.php\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Email address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 42\n    }\n  }), \" Remember me\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/irfan/personal/cardboard-react/src/Components/Auth/Signin.js"],"names":["React","useState","useEffect","AuthForm","SubmitButton","Signin","formErrors","setFormErrors","register","setRegister","name","email","password","errors","length","MINIMUM_NAME_LENGTH","MAXIMUM_NAME_LENGTH","VALID_NAME_REGEX","test","VALID_EMAIL_REGEX","MAXIMUM_EMAIL_LENGTH","console","log","onInputChange","evt","target","value","onFormSubmit","preventDefault"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { AuthForm, SubmitButton } from './AuthStyle'\n\n\nconst Signin = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const {\n    name,\n    email,\n    password,\n  } = register;\n\n  useEffect(() => {\n    const errors = {\n      name: '',\n      email: '',\n    };\n    if (!name) {\n      errors.name = '';\n    } else if (!(name.length >= MINIMUM_NAME_LENGTH)) {\n      errors.name = `Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(name.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.name = `Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(name)) {\n      errors.name = 'Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n    console.log(register)\n    console.log(errors)\n    setFormErrors(errors);\n  }, [name, email]);\n\n  const onInputChange = (evt) => {\n    setRegister({\n      ...register,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const onFormSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(\"Hello\")\n  };\n\n\n  return (\n    <AuthForm>\n      <form action=\"/action_page.php\">\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Email address:</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"pwd\">Password:</label>\n          <input type=\"password\" className=\"form-control\" id=\"pwd\" />\n        </div>\n        <div className=\"checkbox\">\n          <label className=\"input-label\"><input type=\"checkbox\" /> Remember me</label>\n        </div>\n        <br></br>\n        <SubmitButton className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-default\">Submit</button>\n        </SubmitButton>\n      </form>\n    </AuthForm>\n  );\n};\n\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}