{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/personal/cardboard-react/src/Components/Auth/Signup.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { AuthForm, SubmitButton } from './AuthStyle';\n\nconst Signup = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = register;\n  useEffect(() => {\n    const errors = {\n      firstName: '',\n      lastName: '',\n      email: ''\n    };\n\n    if (!firstName) {\n      errors.firstName = '';\n    } else if (!(firstName.length >= MINIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(firstName.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(firstName)) {\n      errors.firstName = 'First Name should only contain alphabets and numbers';\n    }\n\n    if (!lastName) {\n      errors.lastName = '';\n    } else if (!(lastName.length >= MINIMUM_NAME_LENGTH)) {\n      errors.lastName = `Last Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(lastName.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.lastName = `Last Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(lastName)) {\n      errors.lastName = 'Last Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n\n    console.log(register);\n    setFormErrors(errors);\n  }, [name, email, password]);\n\n  const onInputChange = evt => {\n    setRegister({ ...register,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    console.log(\"Hello\");\n  };\n\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"name\",\n    name: \"name\",\n    className: \"form-control\",\n    id: \"name\",\n    value: name,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Email address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    value: email,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    id: \"pwd\",\n    value: password,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 42\n    }\n  }), \" Remember me\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/irfan/personal/cardboard-react/src/Components/Auth/Signup.js"],"names":["React","useState","useEffect","AuthForm","SubmitButton","Signup","formErrors","setFormErrors","register","setRegister","name","email","password","errors","firstName","lastName","length","MINIMUM_NAME_LENGTH","MAXIMUM_NAME_LENGTH","VALID_NAME_REGEX","test","VALID_EMAIL_REGEX","MAXIMUM_EMAIL_LENGTH","console","log","onInputChange","evt","target","value","onFormSubmit","preventDefault"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { AuthForm, SubmitButton } from './AuthStyle'\n\n\nconst Signup = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const {\n    name,\n    email,\n    password,\n  } = register;\n\n  useEffect(() => {\n    const errors = {\n      firstName: '',\n      lastName: '',\n      email: '',\n    };\n    if (!firstName) {\n      errors.firstName = '';\n    } else if (!(firstName.length >= MINIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(firstName.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.firstName = `First Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(firstName)) {\n      errors.firstName = 'First Name should only contain alphabets and numbers';\n    }\n    if (!lastName) {\n      errors.lastName = '';\n    } else if (!(lastName.length >= MINIMUM_NAME_LENGTH)) {\n      errors.lastName = `Last Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(lastName.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.lastName = `Last Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(lastName)) {\n      errors.lastName = 'Last Name should only contain alphabets and numbers';\n    }\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n    console.log(register)\n    setFormErrors(errors);\n  }, [name, email, password]);\n\n  const onInputChange = (evt) => {\n    setRegister({\n      ...register,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const onFormSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(\"Hello\")\n  };\n\n  return (\n    <AuthForm>\n      <form\n        onSubmit={onFormSubmit}\n        method=\"post\"\n      >\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Name:</label>\n          <input \n            type=\"name\"\n            name=\"name\"\n            className=\"form-control\" \n            id=\"name\"\n            value={name}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Email address:</label>\n          <input \n            type=\"email\" \n            name=\"email\"\n            className=\"form-control\" \n            id=\"email\" \n            value={email}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"pwd\">Password:</label>\n          <input \n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\" \n            id=\"pwd\"\n            value={password}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"checkbox\">\n          <label className=\"input-label\"><input type=\"checkbox\" /> Remember me</label>\n        </div>\n        <br></br>\n        <SubmitButton className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-default\">Submit</button>\n        </SubmitButton>\n      </form>\n    </AuthForm>\n  );\n};\n\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}