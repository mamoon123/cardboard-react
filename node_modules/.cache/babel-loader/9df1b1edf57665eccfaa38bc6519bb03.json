{"ast":null,"code":"var _jsxFileName = \"/Users/irfan/personal/cardboard-react/src/Components/Auth/Signup.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { get } from 'lodash/fp';\nimport { AuthForm, SubmitButton, CustomeSpinner } from './AuthStyle';\nimport { VALID_EMAIL_REGEX, VALID_NAME_REGEX, ACCESS_TOKEN, USER, REACT_APP_API_URL } from '../Constant';\nimport { MINIMUM_NAME_LENGTH, MAXIMUM_NAME_LENGTH, MAXIMUM_EMAIL_LENGTH } from '../ValidationLength';\n\nconst Signup = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [cookies, setCookie] = useCookies([ACCESS_TOKEN]);\n  const token = cookies[ACCESS_TOKEN];\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const {\n    name,\n    email,\n    password\n  } = register;\n  useEffect(() => {\n    const errors = {\n      name: '',\n      email: ''\n    };\n\n    if (!name) {\n      errors.name = '';\n    } else if (!(name.length >= MINIMUM_NAME_LENGTH)) {\n      errors.name = `Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(name.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.name = `Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(name)) {\n      errors.name = 'Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n\n    setFormErrors(errors);\n  }, [name, email, register]);\n\n  const onInputChange = evt => {\n    setRegister({ ...register,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const confirm = response => {\n    const {\n      access_token,\n      user\n    } = response;\n\n    if (access_token) {\n      setCookie(USER, user);\n      setCookie(ACCESS_TOKEN, access_token);\n    } else {\n      setLoading(false);\n      console.log(response.message);\n    }\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    setLoading(true);\n    fetch(`${REACT_APP_API_URL}/api/v1/auth/register`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      \"body\": JSON.stringify({\n        name: name,\n        email: email,\n        password: password\n      })\n    }).then(response => response.json()).then(response => {\n      confirm(response);\n    }).catch(err => {\n      debugger;\n      console.log(err);\n    });\n  };\n\n  if (token) {\n    window.location.href = '/orders';\n  }\n\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmit,\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    id: \"name\",\n    required: true,\n    value: name,\n    onChange: onInputChange,\n    error: get('name', formErrors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Email address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    required: true,\n    value: email,\n    onChange: onInputChange,\n    error: get('email', formErrors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    for: \"pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    id: \"pwd\",\n    required: true,\n    value: password,\n    onChange: onInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 42\n    }\n  }), \" Remember me\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-default\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Submit\", loading && /*#__PURE__*/React.createElement(CustomeSpinner, {\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/irfan/personal/cardboard-react/src/Components/Auth/Signup.js"],"names":["React","useState","useEffect","useCookies","get","AuthForm","SubmitButton","CustomeSpinner","VALID_EMAIL_REGEX","VALID_NAME_REGEX","ACCESS_TOKEN","USER","REACT_APP_API_URL","MINIMUM_NAME_LENGTH","MAXIMUM_NAME_LENGTH","MAXIMUM_EMAIL_LENGTH","Signup","formErrors","setFormErrors","loading","setLoading","cookies","setCookie","token","register","setRegister","name","email","password","errors","length","test","onInputChange","evt","target","value","confirm","response","access_token","user","console","log","message","onFormSubmit","preventDefault","fetch","JSON","stringify","then","json","catch","err","window","location","href"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { get } from 'lodash/fp';\nimport { AuthForm, SubmitButton, CustomeSpinner } from './AuthStyle'\nimport { VALID_EMAIL_REGEX, VALID_NAME_REGEX, ACCESS_TOKEN, USER,\n         REACT_APP_API_URL } from '../Constant';\nimport { MINIMUM_NAME_LENGTH, MAXIMUM_NAME_LENGTH, MAXIMUM_EMAIL_LENGTH } from '../ValidationLength';\n\n\nconst Signup = () => {\n  const [formErrors, setFormErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [cookies, setCookie] = useCookies([ACCESS_TOKEN]);\n  const token = cookies[ACCESS_TOKEN];\n  const [register, setRegister] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const {\n    name,\n    email,\n    password,\n  } = register;\n\n  useEffect(() => {\n    const errors = {\n      name: '',\n      email: '',\n    };\n    if (!name) {\n      errors.name = '';\n    } else if (!(name.length >= MINIMUM_NAME_LENGTH)) {\n      errors.name = `Name should be at least ${MINIMUM_NAME_LENGTH} characters long`;\n    } else if (!(name.length <= MAXIMUM_NAME_LENGTH)) {\n      errors.name = `Name should not exceed ${MAXIMUM_NAME_LENGTH} characters`;\n    } else if (!VALID_NAME_REGEX.test(name)) {\n      errors.name = 'Name should only contain alphabets and numbers';\n    }\n\n    if (!email) {\n      errors.email = '';\n    } else if (!VALID_EMAIL_REGEX.test(email)) {\n      errors.email = '*Please enter valid email';\n    } else if (!(email.length <= MAXIMUM_EMAIL_LENGTH)) {\n      errors.email = `Email should not exceed ${MAXIMUM_EMAIL_LENGTH} characters`;\n    }\n    setFormErrors(errors);\n  }, [name, email, register]);\n\n  const onInputChange = (evt) => {\n    setRegister({\n      ...register,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const confirm = (response) => {\n    const { access_token, user } = response;\n    if (access_token) {\n      setCookie(USER, user);\n      setCookie(ACCESS_TOKEN, access_token);\n    } else {\n      setLoading(false);\n      console.log(response.message)\n    }\n  }\n\n  const onFormSubmit = (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    fetch(`${REACT_APP_API_URL}/api/v1/auth/register`, {\n      \"method\": \"POST\",\n      \"headers\": {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      \"body\": JSON.stringify({\n        name: name,\n        email: email,\n        password: password,\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      confirm(response);\n    })\n    .catch(err => {\n      debugger\n      console.log(err);\n    });\n  };\n\n  if (token) {\n    window.location.href = '/orders';\n  }\n\n  return (\n    <AuthForm>\n      <form\n        onSubmit={onFormSubmit}\n        method=\"post\"\n      >\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Name:</label>\n          <input \n            type=\"text\"\n            name=\"name\"\n            className=\"form-control\" \n            id=\"name\"\n            required\n            value={name}\n            onChange={onInputChange}\n            error={get('name', formErrors)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"email\">Email address:</label>\n          <input \n            type=\"email\" \n            name=\"email\"\n            className=\"form-control\" \n            id=\"email\" \n            required\n            value={email}\n            onChange={onInputChange}\n            error={get('email', formErrors)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"input-label\" for=\"pwd\">Password:</label>\n          <input \n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\" \n            id=\"pwd\"\n            required\n            value={password}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"checkbox\">\n          <label className=\"input-label\"><input type=\"checkbox\" /> Remember me</label>\n        </div>\n        <br></br>\n        <SubmitButton className=\"form-group\">\n          <button\n            type=\"submit\" \n            className=\"btn btn-default\"\n            disabled={loading}\n          >\n            Submit\n            {loading && (\n              <CustomeSpinner size=\"sm\" />\n            )}\n          </button>\n        </SubmitButton>\n      </form>\n    </AuthForm>\n  );\n};\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}